/* Twitch Filtered Chat Commands */"use strict";/*** Adding a chat command:
 * ChatCommands.add(command, function, description, args...)
 *   command      (string) chat command to add, executed via //command
 *   function     a function taking the following arguments
 *     cmd        the command being executed (value of `command` parameter)
 *     tokens     the arguments passed to the command when ran
 *     client     a reference to the TwitchClient object
 *     args...    extra arguments passed to ChatCommands.add, as-is
 *   description  (string) a description of the command to be printed in //help
 *   args         (optional) extra arguments to pass to the function
 *   completers   (Array, optional) completion functions
 *
 *** Completion functions:
 * completer_func(client, cmd_object, curr_state) -> [words...]
 *   client       a reference to the TwitchClient object
 *   curr_state   the current completion state
 *     text         the entire String being completed
 *     textBefore   the text before the tab position
 *     wordPos      the location of the word being completed
 *     prefix       text to insert before the completed word (modifiable)
 *     currWord     the word being completed
 * Return a list of valid completion words, which can be empty. Note that
 * the curr_state.prefix field can be modified if desired.
 *
 *** Special configuration:
 * If executing a command results in a "cyclic object value" error, then add
 * the following after adding the command:
 *   ChatCommands.configureCommand("//mycommand", {disableClone: true})
 * This will disable the JSONClone() in the command execution.
 * WARNING: This allows the command to modify its own definition!!
 *
 *** General example:
 * Run the following JavaScript:
 *   ChatCommands.add("mycommand", myFunc, "My new command", 1, 2)
 * Type the following into chat:
 *   "//mycommand value1 value2"
 * This results in the following call:
 *   myFunc("mycommand", ["value1", "value2"], client, 1, 2)
 *
 *** Completion example:
 * Run the following JavaScript:
 *   ChatCommands.add("mycommand", myFunc, "My new command", 1, 2)
 *   ChatCommands.addCommandCompleter("mycommand",
 *     function(client, curr_state) {
 *       return ["param1", "param2", "param3"];
 *     });
 * Type the following into chat (where "<tab>" is the literal tab key):
 *   "//mycommand <tab>"
 * This results in the following output:
 *   "//mycommand param1"
 * Pressing <tab> again cycles through the words.
 *//* FIXME: Retain text after tab: "foo @<tab> foo" -> "foo @user foo" *//* TODO: Implement //plugins addremote <class> <url> [<config>] */var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var ChatCommands=null,ChatCommandManager=function(){function a(){_classCallCheck(this,a),this._commands={},this._aliases={},this._completions={},this._helpText=[],this.add("help",this.onCommandHelp.bind(this),"Show help information"),this.addUsage("help",null,"Show help for all commands"),this.addUsage("help","command","Show usage information for <command>"),this.addAlias("?","help")}/* Trim leading "//" or "." */return _createClass(a,[{key:"_trim",value:function b(a){return a.replace(/^\/\//,"").replace(/^\./,"")}/* Add text to be shown in //help */},{key:"addHelpText",value:function g(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,c=b||{},d=a;if(c.indent&&(d="&nbsp;&nbsp;"+d),c.literal&&(d=d.escape()),c.args&&(d=this.formatArgs(d)),c.command){var e=d.substr(0,d.indexOf(":")),f=d.substr(d.indexOf(":")+1);d=this.helpLine(e,f)}this._helpText.push(d)}/* Add a new command */},{key:"add",value:function h(a,b,d){var e={};if(!a.match(/^[a-z0-9_-]+$/))Util.Error("Invalid command \""+a.escape()+"\"");else{"function"!=typeof b&&Util.Warn("Adding command "+a+": \"func\" is not a function"),d||Util.Warn("Adding command "+a+": description is empty"),e.name=a,e.func=b,e.desc=d,e.aliases=[],e.extra_help=[];for(var c=arguments.length,f=Array(3<c?c-3:0),g=3;g<c;g++)f[g-3]=arguments[g];e.dflt_args=0<f.length?f:null,e.completers=[],e.attributes={},this._commands[a]=e}}/* Configure advanced attributes to modify how a command is invoked */},{key:"configureCommand",value:function c(a,b){if(this.hasCommand(a,!0)){var d=this.getCommand(a,!0);b.disableClone&&(d.attributes.disableClone=!0)}else Util.Error("No such command "+a)}/* Add an alias to an existing command */},{key:"addAlias",value:function c(a,b){this.hasCommand(b,!0)?(this._aliases[a]=b,this._commands[b].aliases.push(a)):Util.Error("Invalid command: "+b)}/* Add a usage line to an existing command */},{key:"addUsage",value:function f(a,b,d){var e=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;if(this.hasCommand(a,!0)){var g=this.getCommand(a);g.usage||(g.usage=[]),g.usage.push({args:b,usage:d,opts:e||{}})}else Util.Error("Invalid command: "+a)}/* Add extra text to be shown in a command's help text */},{key:"addHelp",value:function c(a,b){this.hasCommand(a)?this._commands[a].extra_help.push(b):Util.Error("addHelpText: No such command "+a)}/* Tab completion API {{{0 *//* Add a tab-completion function to the given command */},{key:"addCommandCompleter",value:function d(a,b){var c=this.getCommand(a);null===c?Util.Error("Adding completer to invalid command",a):c.completers.push(b)}/* Request completion of the given completion object */},{key:"complete",value:function S(a,b){var d=b.oText,e=b.oPos,f=b.index,g=[],h=d.substr(0,e),i=h.search(/(?<=\s)\S*$/),j=null,l=null,m=null;/* input/output *//* input/output *//* input/output *//* Text before tab: "test te<tab>" -> "test te" *//* Word being tab-completed: "test te<tab>" -> "te" *//* Text to insert before the match (including any leading symbols) *//* The word to complete *//* Text to add after the completed word */-1<i?(j=h.substr(0,i),l=h.substr(i).trimStart()):(j="",l=h,m=" "),Util.DebugOnly("Completing text \"%s\", pos %d, idx %d, wpos %d",d,e,f,i),Util.DebugOnly("Text before: \"%s\"",h),Util.DebugOnly("Prefix: \"%s\"",j),Util.DebugOnly("Current word: \"%s\"",l);var n=!1;/* Complete @<user> sequences *//* Complete channel names */if(l.startsWith("@")&&function(){var b=l.substr(1),d=!0,e=!1,f=void 0;try{for(var h,i=a.GetJoinedChannels()[Symbol.iterator]();!(d=(h=i.next()).done);d=!0){var k=h.value,c=a.GetChannelInfo(k);if(c.users){var o=c.users.map(function(a){return a.toLowerCase()});g.extend(o.filter(function(a){return a.startsWith(b)}))}}}catch(a){e=!0,f=a}finally{try{!d&&i.return&&i.return()}finally{if(e)throw f}}var m=a.GetName().toLowerCase();m.startsWith(b)&&g.push(m),j.endsWith("@")||(j+="@"),n=0<g.length}(),!n&&l.startsWith("#")){var o=!0,p=!1,q=void 0;try{for(var r,s,t=a.GetJoinedChannels()[Symbol.iterator]();!(o=(r=t.next()).done);o=!0)s=r.value,s.toLowerCase().startsWith(l)&&g.push(s)}catch(a){p=!0,q=a}finally{try{!o&&t.return&&t.return()}finally{if(p)throw q}}0<g.length&&(n=!0,j.endsWith("#")&&(j=j.substr(0,j.length-1)))}var u=h.trimEnd();/* Complete a specific command */if(!n&&this.hasCommand(u)){var v=this.getCommand(u),w=!0,x=!1,y=void 0;try{for(var z,A=v.completers[Symbol.iterator]();!(w=(z=A.next()).done);w=!0){var B=z.value,C={text:d,textBefore:h,wordPos:i,prefix:j,currWord:l},D=B.bind(v);g.extend(D(a,C)),C.prefix!==j&&(j=C.prefix)}}catch(a){x=!0,y=a}finally{try{!w&&A.return&&A.return()}finally{if(x)throw y}}n=0<g.length}/* Complete commands */if(!n&&this.isCommandStr(d)){var E=this._trim(d.substr(0,e)),F=!0,G=!1,H=void 0;try{for(var I,J,K=Object.keys(this._commands).sort()[Symbol.iterator]();!(F=(I=K.next()).done);F=!0)J=I.value,(0===E.length||J.startsWith(E))&&g.push(J)}catch(a){G=!0,H=a}finally{try{!F&&K.return&&K.return()}finally{if(G)throw H}}j=E?d.substr(0,d.indexOf(E)):d}/* If matches were found, return one */if(0<g.length){/* Remove duplicates from matches */var L=[],M=!0,N=!1,O=void 0;try{for(var P,Q,R=g[Symbol.iterator]();!(M=(P=R.next()).done);M=!0)Q=P.value,L.includes(Q)||L.push(Q)}catch(a){N=!0,O=a}finally{try{!M&&R.return&&R.return()}finally{if(N)throw O}}g=L,f<g.length&&(d=j+g[f],e=d.length,null!=m&&(d+=m),f+=1),f>=g.length&&(f=0)}else d=b.oText,e=b.oPos;return{oText:b.oText,oPos:b.oPos,cText:d,cPos:d.length,index:f}}/* End tab completion API 0}}} *//* Return whether or not the message is a command */},{key:"isCommandStr",value:function b(a){return a.match(/^\/\//)||a.match(/^\./)}/* Return whether or not the message invokes a valid command */},{key:"hasCommand",value:function d(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],c=this._trim(a);return!!this._commands.hasOwnProperty(c)||!b&&this._aliases.hasOwnProperty(c)}/* Execute a command */},{key:"execute",value:function g(a,b){if(this.isCommandStr(a)){var d=this._trim(a.split(" ")[0]),e=a.replace(/[\s]*$/,"").split(" ").slice(1);/* Executing "//" or "." invokes "//help" */if(0===this._trim(a).length&&(d="help",e=[]),this.hasCommand(d))try{var f=this.getCommand(d),c=Object.create(this);if(c.formatUsage=this.formatUsage.bind(this,f),c.printUsage=this.printUsage.bind(this,f),c.formatHelp=this.formatHelp.bind(this,f),c.printHelp=this.printHelp.bind(this,f),c.command=d,c.cmd_func=f.func,c.cmd_desc=f.desc,c.cmd_extra_help=f.extra_help,c.cmd_attributes=f.attributes,f.attributes.disableClone?(c.cmd_dflt_args=f.dflt_args,c.cmd_completers=f.completers):(c.cmd_dflt_args=Util.JSONClone(f.dflt_args),c.cmd_completers=Util.JSONClone(f.completers)),Util.DebugLevel>=Util.LEVEL_DEBUG){var h=Util.JSONClone(e);f.dflt_args&&h.extend(f.dflt_args);var i=h.map(function(a){return"\""+Util.EscapeSlashes(""+a)+"\""}).join(", ");Util.DebugOnly(d+"("+i+")")}f.dflt_args?f.func.bind(c).apply(void 0,[d,e,b].concat(_toConsumableArray(f.dflt_args))):f.func.bind(c)(d,e,b)}catch(a){Content.addErrorText(d+": "+a.name+": "+a.message),Util.Error(a)}else Content.addErrorText(d+": unknown command")}else Content.addErrorText(JSON.stringify(a)+": not a command string")}/* Return an array of valid command names */},{key:"getCommands",value:function a(){return Object.keys(this._commands)}/* Return a command object by command name (optionally excluding aliases) */},{key:"getCommand",value:function f(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],d=this._trim(a),e=null;return this._aliases.hasOwnProperty(d)&&(d=this._aliases[d]),this._commands.hasOwnProperty(d)&&(e=this._commands[d],!e&&!b&&this._commands[this._aliases[d]]&&(e=this._commands[this._aliases[d]])),e}/* Formatting API {{{0 *//* Format the help text for the given command object */},{key:"formatHelp",value:function b(a){return this.helpLine("//"+a.name,a.desc,!0)}/* Format the usage text for the given command name */},{key:"formatUsage",value:function q(b){var c=[];if(b.usage){var d=!0,e=!1,f=void 0;try{for(var g,h=b.usage[Symbol.iterator]();!(d=(g=h.next()).done);d=!0){var i=g.value,j=this.formatArgs(i.usage);if(i.args){var r=this.formatArgs(i.args);c.push(this.helpLine("//"+b.name+" "+r,j))}else c.push(this.helpLine("//"+b.name,j))}}catch(a){e=!0,f=a}finally{try{!d&&h.return&&h.return()}finally{if(e)throw f}}}else c.push(this.helpLine("//"+b.name,this.formatArgs(b.desc)));var k=!0,l=!1,m=void 0;try{for(var n,o,p=b.aliases[Symbol.iterator]();!(k=(n=p.next()).done);k=!0)o=n.value,c.push(this.helpLine("//"+o,"Alias for command //"+b.name,!0))}catch(a){l=!0,m=a}finally{try{!k&&p.return&&p.return()}finally{if(l)throw m}}return c}/* Helper: format a string as an argument */},{key:"arg",value:function b(a){return"<span class=\"arg\">"+a.escape()+"</span>"}/* Helper: format a help line key/value pair (optionally escaping HTML) */},{key:"helpLine",value:function f(a,b){var c=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],d="<div>"+(c?a.escape():a)+"</div>",e="<div>"+(c?b.escape():b)+"</div>";return"<div class=\"help-line\">"+d+e+"</div>"}/* Helper: format a help line similar to helpLine */},{key:"helpTextLine",value:function d(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],c="<div>"+(b?a.escape():a)+"</div>";return"<div class=\"help-text-line\">"+c+"</div>"}/* Helper: format "<arg>" and "*arg*" in the given string */},{key:"formatArgs",value:function n(a){var b=this,c=a,d=[[/<(\w+)>/g,function(a,c){return"&lt;"+b.arg(c)+"&gt;"}],[/\*(\w+)\*/g,function(a,b){return"<span class=\"b\">"+b.escape()+"</span>"}]],e=!0,f=!1,g=void 0;try{for(var h,i=d[Symbol.iterator]();!(e=(h=i.next()).done);e=!0){var j=h.value,k=_slicedToArray(j,2),l=k[0],m=k[1];c=c.replace(l,m)}}catch(a){f=!0,g=a}finally{try{!e&&i.return&&i.return()}finally{if(f)throw g}}return c}/* End formatting API 0}}} *//* Print the usage information for the given command object */},{key:"printUsage",value:function i(a){var b=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];b&&Content.addHelpText("Usage:");var c=!0,d=!1,e=void 0;try{for(var f,g,h=this.formatUsage(a)[Symbol.iterator]();!(c=(f=h.next()).done);c=!0)g=f.value,Content.addHelp(g)}catch(a){d=!0,e=a}finally{try{!c&&h.return&&h.return()}finally{if(d)throw e}}}/* Print the help information for the given command object */},{key:"printHelp",value:function b(a){Content.addHelp(this.formatHelp(a))}/* Handle builtin //help command */},{key:"onCommandHelp",value:function M(a,b,e){if(0===b.length){Content.addHelpText("Commands:");var f=!0,g=!1,h=void 0;try{for(var i,j,k=Object.keys(this._commands)[Symbol.iterator]();!(f=(i=k.next()).done);f=!0)j=i.value,this.printHelp(this._commands[j])}catch(a){g=!0,h=a}finally{try{!f&&k.return&&k.return()}finally{if(g)throw h}}Content.addHelp(this.formatArgs("Enter //help <command> for help on <command>"));var l=!0,m=!1,n=void 0;try{for(var o,p,q=this._helpText[Symbol.iterator]();!(l=(o=q.next()).done);l=!0)p=o.value,Content.addHelp(p)}catch(a){m=!0,n=a}finally{try{!l&&q.return&&q.return()}finally{if(m)throw n}}var N=e.get("HTMLGen");if(N.enableAntics){Content.addHelpText("Mod antics are enabled:");var r=!0,s=!1,t=void 0;try{for(var u,v=N.anticsCommands[Symbol.iterator]();!(r=(u=v.next()).done);r=!0){var w=u.value,x=_slicedToArray(w,2),y=x[0],z=x[1];Content.addHelpLine(y.join(", "),z)}}catch(a){s=!0,t=a}finally{try{!r&&v.return&&v.return()}finally{if(s)throw t}}}}else if(this.hasCommand(b[0])){Content.addHelpText("Commands:");var d=this.getCommand(b[0]),A=!0,B=!1,C=void 0;try{for(var D,E,F=this.formatUsage(d)[Symbol.iterator]();!(A=(D=F.next()).done);A=!0)E=D.value,Content.addHelp(E)}catch(a){B=!0,C=a}finally{try{!A&&F.return&&F.return()}finally{if(B)throw C}}var G=!0,H=!1,I=void 0;try{for(var J,K,L=d.extra_help[Symbol.iterator]();!(G=(J=L.next()).done);G=!0)K=J.value,Content.addHelp(K)}catch(a){H=!0,I=a}finally{try{!G&&L.return&&L.return()}finally{if(H)throw I}}}else Content.addErrorText("Invalid command "+b[0])}}]),a}();/* exported ChatCommands *//* //log: manage debug-msg-log content */function onCommandLog(a,c,d){/* JSON-encode an object, inserting spaces around items */function e(a){return JSON.stringify(a,null,1).replace(/\[[ \n]*/g,"[").replace(/[\n ]*\]/g,"]").replace(/{[ \n]*/g,"{").replace(/[\n ]*}/g,"}").replace(/[ ]*\n[ ]*/g," ")}/* Format a log message for printing */function f(a){var b=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],c=e(a);if(a&&a._cmd&&a._raw&&a._parsed){/* Smells like a TwitchEvent */var d=["TwitchEvent",a._cmd,e(a._raw),e(a._parsed)];a._stacktrace&&d.push(e(a._stacktrace)),c=d.join(" ")}return b?c.escape():c}/* Find matching and non-matching items */function g(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],c=[],d=[],f=!0,g=!1,h=void 0;try{for(var i,k,m=j[Symbol.iterator]();!(f=(i=m.next()).done);f=!0)k=i.value,e(k).includes(a)?c.push(k):d.push(k)}catch(a){g=!0,h=a}finally{try{!f&&m.return&&m.return()}finally{if(g)throw h}}return b?[d,c]:[c,d]}var h=0<c.length?c[0]:"",j=Util.GetWebStorage(LOG_KEY)||[],k=j.length,o=function(a,b){return a+" "+b+(1===a?"":"s")};if(Content.addHelpText("Debug message log length: "+k),!(0<c.length))this.printUsage();else if("help"===h)this.printHelp(),this.printUsage();else if("show"===h){var p=!0,q=!1,r=void 0;try{for(var t,u=Object.entries(j)[Symbol.iterator]();!(p=(t=u.next()).done);p=!0){var v=t.value,w=_slicedToArray(v,2),x=w[0],i=w[1];Content.addHelp(x+": "+f(i))}}catch(a){q=!0,r=a}finally{try{!p&&u.return&&u.return()}finally{if(q)throw r}}}else if("export"===h)Util.Open(AssetPaths.LOG_EXPORT_WINDOW,"_blank",{});else if("summary"===h){var l=[],y=[],z=!0,A=!1,B=void 0;try{for(var C,D,E=Object.values(j)[Symbol.iterator]();!(z=(C=E.next()).done);z=!0)D=C.value,y.push(D._cmd||e(D).substr(0,10)),10<=y.length&&(l.push(y),y=[])}catch(a){A=!0,B=a}finally{try{!z&&E.return&&E.return()}finally{if(A)throw B}}0<y.length&&l.push(y);for(var F=0,G=0;G<l.length;++G){var H=l[G],I=H.join(" ");Content.addHelpText(F+"-"+(F+H.length-1)+": "+I),F+=H.length}}else if(-1<["search","filter","filter-out"].indexOf(h)){if(1<c.length){var s=c.slice(1).join(" "),J=g(s,"filter-out"===h),K=_slicedToArray(J,2),L=K[0],M=K[1],N=o(L.length,"item");if(Content.addHelpText("Found "+N+" containing \""+s+"\""),"search"===h){var O=!0,P=!1,Q=void 0;try{for(var R,S=L[Symbol.iterator]();!(O=(R=S.next()).done);O=!0){var T=R.value,U=_slicedToArray(T,2),V=U[0],W=U[1],X=W._cmd||e(W).substr(0,10);Content.addHelpText(V+": "+X)}}catch(a){P=!0,Q=a}finally{try{!O&&S.return&&S.return()}finally{if(P)throw Q}}}else Content.addHelpText("Removing "+M.length+"/"+k+" items"),Content.addHelpText("New logs length: "+L.length),Util.SetWebStorage(LOG_KEY,L.map(function(a){return a[1]}))}else Content.addHelpText("Usage: //log "+h+" <string>");}else if("remove"===h){var wa=c.slice(1).filter(function(a){return Util.IsNumber(a)}).map(function(a){return Util.ParseNumber(a)});if(0<wa.length){Content.addHelpText("Removing "+o(wa.length,"item"));/* All items other than those listed in n */for(var Y=[],Z=0;Z<k;++Z)-1===wa.indexOf(Z)&&Y.push(j[Z]);Content.addHelpText("New logs length: "+Y.length),Util.SetWebStorage(LOG_KEY,Y)}else Content.addHelpText("No items to remove")}else if("shift"===h){var n=1;1<c.length&&Util.IsNumber(c[1])&&(n=Util.ParseNumber(c[1]));for(var xa=0;xa<n&&0<k;++xa)j.shift();Content.addHelpText("New logs length: "+k),Util.SetWebStorage(LOG_KEY,j)}else if("pop"===h){var ya=1;1<c.length&&Util.IsNumber(c[1])&&(ya=Util.ParseNumber(c[1]));for(var za=0;za<ya&&0<k;++za)j.pop();Content.addHelpText("New logs length: "+k),Util.SetWebStorage(LOG_KEY,j)}else if("size"===h){var Aa=e(j).length;Content.addHelpText("Logged bytes: "+Aa+" ("+Aa/1024+" KB)")}else if("clear"===h)Util.SetWebStorage(LOG_KEY,[]),Content.addHelpText("Log cleared");else if("replay"===h||"replay-match"===h){/* eslint-disable-next-line no-inner-declarations */var _=function(a){a&&a._cmd&&a._raw&&aa.push(a._raw)},aa=[];if(0===c.length)Content.addHelpText("Usage: //log replay all"),Content.addHelpText("Usage: //log replay <number>"),Content.addHelpText("Usage: //log replay-match <string>");else{var ba=c[1],ca=Util.ParseNumber(ba);if("replay-match"===h){/* Replay items matching expression */var da=c.slice(1).join(" "),ea=!0,fa=!1,ga=void 0;try{for(var ha,ia,ja=g(da)[0][Symbol.iterator]();!(ea=(ha=ja.next()).done);ea=!0)ia=ha.value,_(ia)}catch(a){fa=!0,ga=a}finally{try{!ea&&ja.return&&ja.return()}finally{if(fa)throw ga}}}else if("all"===ba){/* Replay everything */var ka=!0,la=!1,ma=void 0;try{for(var na,oa,pa=j[Symbol.iterator]();!(ka=(na=pa.next()).done);ka=!0)oa=na.value,_(oa)}catch(a){la=!0,ma=a}finally{try{!ka&&pa.return&&pa.return()}finally{if(la)throw ma}}}else 0<=ca&&ca<k?/* Replay one item */_(j[ca]):Content.addErrorText("Index "+ca+" not between 0 and "+k);var qa=!0,ra=!1,sa=void 0;try{for(var ta,ua,va=aa[Symbol.iterator]();!(qa=(ta=va.next()).done);qa=!0)ua=ta.value,Content.addHelpText("Replaying "+ua),d._onWebsocketMessage({data:ua})}catch(a){ra=!0,sa=a}finally{try{!qa&&va.return&&va.return()}finally{if(ra)throw sa}}}}else if(Util.IsNumber(h)){/* Show item by index */var b=Util.ParseNumber(h);Content.addHelp(f(j[b]))}else Content.addHelpText("Unknown argument "+h)}/* //clear: clear one or all modules */function onCommandClear(a,b){if(0===b.length)$(".content").find(".line-wrapper").remove();else if(b[0].match(/module[\d]+/)){var c=document.getElementById(b[0]);c?$(c).find(".line-wrapper").remove():Content.addHelpText("Unknown module "+b[0])}else this.printUsage()}/* //join: join a channel */function onCommandJoin(a,b,c){if(0<b.length){var d=Twitch.ParseChannel(b[0]),e=d.channel;/* Sanitizes the channel token */null!==e&&(c.IsInChannel(e)?Content.addNoticeText("Failed joining "+e+": already in channel"):c.JoinChannel(e))}else this.printUsage()}/* //part: leave a channel */function onCommandPart(a,b,c){if(0<b.length){var d=Twitch.ParseChannel(b[0]),e=d.channel;/* Sanitizes the channel token */null!==e&&(c.IsInChannel(e)?c.LeaveChannel(e):Content.addNoticeText("Failed leaving "+e+": not in channel"))}else this.printUsage()}/* //badges: display known badge images */function onCommandBadges(a,c,d){var e=[],f=!0,g=!1,h=void 0;/* Obtain global badges */try{for(var i,j=Object.entries(d.GetGlobalBadges())[Symbol.iterator]();!(f=(i=j.next()).done);f=!0){var k=i.value,l=_slicedToArray(k,2),m=l[0],n=l[1],o=!0,p=!1,q=void 0;try{for(var r,s=Object.values(n.versions)[Symbol.iterator]();!(o=(r=s.next()).done);o=!0){var u=r.value,v=u.image_url_2x,w=36;-1<c.indexOf("small")?(v=u.image_url_1x,w=18):-1<c.indexOf("large")&&(v=u.image_url_4x,w=72);var t="width=\""+w+"\" height=\""+w+"\" title=\""+m+"\"";e.push("<img src=\""+v+"\" "+t+" alt=\""+m+"\" />")}}catch(a){p=!0,q=a}finally{try{!o&&s.return&&s.return()}finally{if(p)throw q}}}/* Print global badges */}catch(a){g=!0,h=a}finally{try{!f&&j.return&&j.return()}finally{if(g)throw h}}Content.addNotice(e.join(""));/* Obtain channel badges */var x=!0,y=!1,z=void 0;try{for(var A,B,C=d.GetJoinedChannels()[Symbol.iterator]();!(x=(A=C.next()).done);x=!0){B=A.value,e=[];var D=!0,E=!1,F=void 0;try{for(var G,H=Object.entries(d.GetChannelBadges(B))[Symbol.iterator]();!(D=(G=H.next()).done);D=!0){var I=G.value,J=_slicedToArray(I,2),K=J[0],L=J[1],b=!0,M=!1,N=void 0;try{for(var O,P=Object.entries(L)[Symbol.iterator]();!(b=(O=P.next()).done);b=!0){var Q=O.value,R=_slicedToArray(Q,2),S=R[0],T=R[1],U=T.image_url_4x||T.image_url_2x||T.image_url_1x,V=K+" "+S+" "+T.description+" "+T.title;e.push("<img src=\""+U+"\" "+"width=\"36\" height=\"36\""+" title=\""+V+"\" alt=\""+V+"\" />")}}catch(a){M=!0,N=a}finally{try{!b&&P.return&&P.return()}finally{if(M)throw N}}}/* Print channel badges */}catch(a){E=!0,F=a}finally{try{!D&&H.return&&H.return()}finally{if(E)throw F}}Content.addNotice(Twitch.FormatChannel(B)+": "+e.join(""))}}catch(a){y=!0,z=a}finally{try{!x&&C.return&&C.return()}finally{if(y)throw z}}}/* //cheers: display known cheermotes */function onCommandCheers(a,b,c){var d=c.GetCheers(),e=null,f=null,g=null;b.includes("dark")?e="dark":b.includes("light")&&(e="light"),b.includes("scale1")?f="1":b.includes("scale1.5")?f="1.5":b.includes("scale2")?f="2":b.includes("scale3")?f="3":b.includes("scale4")&&(f="4"),b.includes("static")?g="static":b.includes("animated")&&(g="animated");var h=function(a,b){var c=[],d=e,h=f,i=g;null===e&&(d=b.backgrounds.includes("dark")?"dark":b.backgrounds[0]),null===f&&(h=b.scales.map(function(a){return Util.ParseNumber(a)}).min()),null===g&&($("#cbAnimCheers").is(":checked")?i=b.states.includes("animated")?"animated":b.states[0]:i=b.states.includes("static")?"static":b.states[0]);var j=!0,k=!1,l=void 0;try{for(var m,n=Object.values(b.tiers)[Symbol.iterator]();!(j=(m=n.next()).done);j=!0){var o=m.value,p=o.min_bits,q=o.images[d][i][h],r=(a+" "+b.prefix+" "+p).escape();c.push("<img src=\""+q+"\" alt=\""+r+"\" title=\""+r+"\" />")}}catch(a){k=!0,l=a}finally{try{!j&&n.return&&n.return()}finally{if(k)throw l}}return c.join("")},i={},j=!0,k=!1,l=void 0;try{for(var m,n=Object.entries(d)[Symbol.iterator]();!(j=(m=n.next()).done);j=!0){var o=m.value,p=_slicedToArray(o,2),q=p[0],r=p[1],s=[],t=!0,u=!1,v=void 0;try{for(var w,x=Object.entries(r)[Symbol.iterator]();!(t=(w=x.next()).done);t=!0){var y=w.value,z=_slicedToArray(y,2),A=z[0],B=z[1];i[A]||(s.push(h(q,B)),i[A]=1)}}catch(a){u=!0,v=a}finally{try{!t&&x.return&&x.return()}finally{if(u)throw v}}0<s.length&&("GLOBAL"===q?Content.addInfoText("Global cheermotes:"):Content.addInfoText("Cheermotes for channel "+q+":"),Content.addInfo(s.join("")))}}catch(a){k=!0,l=a}finally{try{!j&&n.return&&n.return()}finally{if(k)throw l}}}/* //emotes: display known emotes */function onCommandEmotes(a,b,c){var d=[],e=function(a,b,d){return c.get("HTMLGen").genEmote(a,b,d)},f={},g=!0,h=!1,i=void 0;try{for(var j,l=Object.entries(c.GetEmoteSets())[Symbol.iterator]();!(g=(j=l.next()).done);g=!0){var m=j.value,n=_slicedToArray(m,2),o=n[0],p=n[1],q=[],r=!0,s=!1,t=void 0;try{for(var u,w=p[Symbol.iterator]();!(r=(u=w.next()).done);r=!0){var x=u.value,y=c.GetEmoteName(x)+"\nID: "+x,z=e("twitch",y,c.GetEmote(x));-1===q.indexOf(z)&&q.push(z)}}catch(a){s=!0,t=a}finally{try{!r&&w.return&&w.return()}finally{if(s)throw t}}0<q.length&&(f[o]=q)}}catch(a){h=!0,i=a}finally{try{!g&&l.return&&l.return()}finally{if(h)throw i}}if((-1<b.indexOf("global")||-1<b.indexOf("all"))&&(d.push(_J("Global:",""+f[TwitchClient.ESET_GLOBAL].join(""))),d.push(_J("Twitch Prime:",""+f[TwitchClient.ESET_PRIME].join(""))),d.push(_J("Turbo Set 1:",""+f[TwitchClient.ESET_TURBO_1].join(""))),d.push(_J("Turbo Set 2:",""+f[TwitchClient.ESET_TURBO_2].join(""))),d.push(_J("Turbo Set 3:",""+f[TwitchClient.ESET_TURBO_3].join(""))),d.push(_J("Turbo Set 4:",""+f[TwitchClient.ESET_TURBO_4].join("")))),-1<b.indexOf("channel")||-1<b.indexOf("all")){var A=!0,B=!1,C=void 0;try{for(var D,E=Object.entries(f)[Symbol.iterator]();!(A=(D=E.next()).done);A=!0){var F=D.value,G=_slicedToArray(F,2),H=G[0],q=G[1];"0"!=""+H&&d.push("Set "+H+": "+q.join(""))}}catch(a){B=!0,C=a}finally{try{!A&&E.return&&E.return()}finally{if(B)throw C}}}if(-1<b.indexOf("ffz")||-1<b.indexOf("all"))if(!c.FFZEnabled())Content.addErrorText("FFZ support is disabled");else{var I=!0,J=!1,K=void 0;try{for(var L,M=c.GetJoinedChannels()[Symbol.iterator]();!(I=(L=M.next()).done);I=!0){var N=L.value,O=[],P=c.GetFFZEmotes(N)||{},Q=P.emotes||[],R=!0,S=!1,T=void 0;try{for(var U,V=Object.entries(Q)[Symbol.iterator]();!(R=(U=V.next()).done);R=!0){var W=U.value,X=_slicedToArray(W,2),Y=X[0],k=X[1];if(0<Object.entries(k.urls).length){var Ba=Object.values(k.urls)[0];O.push(e("ffz",Y,Ba))}}}catch(a){S=!0,T=a}finally{try{!R&&V.return&&V.return()}finally{if(S)throw T}}0<O.length&&d.push("FFZ: "+N+": "+O.join(""))}}catch(a){J=!0,K=a}finally{try{!I&&M.return&&M.return()}finally{if(J)throw K}}}if(-1<b.indexOf("bttv")||-1<b.indexOf("all"))if(!c.BTTVEnabled())Content.addErrorText("BTTV support is disabled");else{var v=c.GetGlobalBTTVEmotes(),Z=[],_=!0,aa=!1,ba=void 0;try{for(var ca,da=Object.entries(v)[Symbol.iterator]();!(_=(ca=da.next()).done);_=!0){var ea=ca.value,fa=_slicedToArray(ea,2),ga=fa[0],ha=fa[1];Z.push(e("bttv",ga,ha.url))}}catch(a){aa=!0,ba=a}finally{try{!_&&da.return&&da.return()}finally{if(aa)throw ba}}0<Z.length&&d.push("BTTV: "+Z.join(""));var ia=!0,ja=!1,ka=void 0;try{for(var la,ma,na=c.GetJoinedChannels()[Symbol.iterator]();!(ia=(la=na.next()).done);ia=!0){ma=la.value,Z=[];var oa=!0,pa=!1,qa=void 0;try{for(var ra,sa=Object.values(c.GetBTTVEmotes(ma))[Symbol.iterator]();!(oa=(ra=sa.next()).done);oa=!0){var ta=ra.value,ua=ta.code+" (#"+ta.channel+")";Z.push(e("bttv",ua,ta.url))}}catch(a){pa=!0,qa=a}finally{try{!oa&&sa.return&&sa.return()}finally{if(pa)throw qa}}0<Z.length&&d.push("BTTV: "+ma+": "+Z.join(""))}}catch(a){ja=!0,ka=a}finally{try{!ia&&na.return&&na.return()}finally{if(ja)throw ka}}}if(0===d.length){this.printUsage();var Ca=Object.entries(f).length;Content.addHelpTextLine("There are "+Ca+" available emote sets")}else{var va=!0,wa=!1,xa=void 0;try{for(var ya,za,Aa=d[Symbol.iterator]();!(va=(ya=Aa.next()).done);va=!0)za=ya.value,Content.addNotice(za)}catch(a){wa=!0,xa=a}finally{try{!va&&Aa.return&&Aa.return()}finally{if(wa)throw xa}}}}/* //plugins: manage plugins */function onCommandPlugins(a,b,c){var d=0<b.length?b[0]:null;if(!Plugins.plugins)Content.addErrorText("Plugin information unavailable");else if(null===d||"list"===d){var e=!0,f=!1,g=void 0;try{for(var h,i=Object.entries(Plugins.plugins)[Symbol.iterator]();!(e=(h=i.next()).done);e=!0){var j=h.value,k=_slicedToArray(j,2),l=k[0],m=k[1],n=l+": "+m.file+" @ "+m.order;if(m._error){var r=JSON.stringify(m._error_obj);Content.addErrorText(n+": Failed: "+r)}else m._loaded&&(n+=": Loaded",m.commands&&(n=n+": Commands: "+m.commands.join(" ")),Content.addPreText(n))}}catch(a){f=!0,g=a}finally{try{!e&&i.return&&i.return()}finally{if(f)throw g}}}else if("add"!==d&&"load"!==d)"help"===d?(Content.addHelpText("Help for //plugins:"),this.printHelp(),this.printUsage(!1)):(Content.addErrorText("Unknown command "+d),this.printHelp());else if(3<=b.length){var o=b[1],p=b[2],q={};if(Plugins.add({ctor:o,file:p}),4<=b.length){var s=b.slice(3).join(" ");try{q=JSON.parse(s)}catch(a){Content.addErrorText(_J("Malformed JSON string \""+s+"\";","ignoring"))}}Plugins.load(o,c,{PluginConfig:q}).then(function(){Content.addInfoText("Successfully loaded plugin "+o)}).catch(function(a){Util.Error("Failed to load plugin",o,a),Content.addErrorText("Failed to load plugin "+o+": "+a)}),Content.addInfoText("Added plugin "+o+" from "+p)}else Content.addErrorText("//plugins add: not enough arguments")}/* //client: display client status information */function onCommandClient(a,b,d){var e=d.ConnectionStatus(),f=d.GetJoinedChannels()||[],g=d.SelfUserState()||{};Content.addHelpText("Client information:"),Content.addHelpLine("Socket:",e.open?"Open":"Closed"),Content.addHelpLineE("Endpoint:",e.endpoint),e.connected?Content.addHelpLine("Status:","Connected"):Content.addHelpLine("Status:","Not connected"),Content.addHelpLine("Identified:",e.identified?"Yes":"No"),Content.addHelpLine("Authenticated:",e.authed?"Yes":"No"),Content.addHelpLineE("Name:",d.GetName()),Content.addHelpLine("FFZ:",d.FFZEnabled()?"Enabled":"Disabled"),Content.addHelpLine("BTTV:",d.BTTVEnabled()?"Enabled":"Disabled"),Content.addHelpLineE("User ID:",""+g.userid),Content.addHelpText("Channels connected to: "+f.length);var h=!0,i=!1,j=void 0;try{for(var k,l=f[Symbol.iterator]();!(h=(k=l.next()).done);h=!0){var m=k.value,c=g[m]||{},n=d.GetChannelInfo(m)||{},o=Object.keys(n.rooms||{}),p=n.users?n.users.length:0;Content.addHelpText("Channel "+m+":"),Content.addHelpLine("Status:",n.online?"Online":"Offline"),Content.addHelpLineE("ID:",""+n.id),Content.addHelpLine("Active users:",""+p),Content.addHelpLineE("Rooms: "+o.length,o.join(", ")),0<Object.entries(c).length&&(Content.addHelpLineE("User Color:",c.color||"not set"),Content.addHelpLineE("User Badges:",JSON.stringify(c.badges)),Content.addHelpLineE("Display Name:",""+c["display-name"]),Content.addHelpText("User Info: "+JSON.stringify(c)))}}catch(a){i=!0,j=a}finally{try{!h&&l.return&&l.return()}finally{if(i)throw j}}}/* //raw: send a message directly to Twitch, without parsing */function onCommandRaw(a,b,c){c.SendRaw(b.join(" "))}/* //channels: display connected channels */function onCommandChannels(a,b,c){Content.addHelpText("Active channels:");var d=!0,e=!1,f=void 0;try{for(var g,h=c.GetJoinedChannels()[Symbol.iterator]();!(d=(g=h.next()).done);d=!0){var i=g.value,j=c.GetChannelInfo(i);Content.addHelpText(i+" "+j.id)}}catch(a){e=!0,f=a}finally{try{!d&&h.return&&h.return()}finally{if(e)throw f}}}/* //highlight: manage highlight patterns */function onCommandHighlight(a,b,c){var d=c.get("HTMLGen");if(0===b.length||"show"===b[0]){Content.addHelpText("Current highlight patterns:");for(var j,k=0;k<d.highlightMatches.length;++k)j=d.highlightMatches[k],Content.addHelpLineE("Index "+(k+1),""+j)}else if("add"===b[0]){var l=b.slice(1).join(" ");if(0<l.length){var m=Util.StringToRegExp(l,"g");d.addHighlightMatch(m),Content.addHelpText("Added pattern "+m)}else Content.addErrorText("\"//highlight add\" requires argument"),this.printUsage()}else if(!("remove"===b[0]))this.printUsage();else if(1<b.length){var e=Util.ParseNumber(b[1]),f=d.highlightMatches,g=d.highlightMatches.length;if(0<e&&e<=g){if(1===e)f.shift();else if(e===f.length)f.pop();else{var h=f.slice(0,e-1),i=f.slice(e);d.highlightMatches=h.concat(i)}Content.addHelpText("Now storing "+d.highlightMatches.length+" patterns")}else Content.addErrorText("Index "+e+" must be between 1 and "+g)}else Content.addErrorText("\"//highlight remove\" requires argument"),this.printUsage()}/* //auth: authentication help */function onCommandAuth(a,b,c){var d=0<b.length?b[0]:"";if("help"===d)Content.addHelpText("Help for command "+a+":"),this.printHelp(),this.printUsage();else if(!c.IsAuthed()){var e=$("<a target=\"_blank\"></a>");e.attr("href",Strings.OAUTH_GEN_URL),e.text(Strings.OAUTH_GEN_URL),Content.addHelpText("Click this link to generate an OAuth token:"),Content.addHelp(e),Content.addHelpText(_J("Then enter your Twitch username and that OAuth","token in the settings panel. You can open the","settings panel by clicking the gear icon in the","upper-right corner of the page."))}else if(Content.addHelpText("You are authenticated as "+c.GetName()),"reset"===d){var f=$(_J("<span class=\"btn help\" style=\"color: lightblue;","font-weight: bold\">Click here to reset your OAuth","token</span>"));Content.addHelpText(_J("Are you sure you want to reset your OAuth","token? This cannot be undone!")),f.click(function(){var a=prompt(_J("Enter your username if you're ABSOLUTELY","CERTAIN you want to reset your OAuth","token\nThis cannot be undone."));if(a===c.GetName()){/* Reset the OAuth token by appending "&pass=" to the query string */var b=window.location.search;b+=0<b.length&&"?"===b[0]?"&pass=":"?pass=",window.location.search=b}else Content.addError("The value you entered does not match; not resetting")}),Content.addHTML(f)}}/* Call when ready to initialize chat commands. Populates the ChatCommands
 * global variable */function InitChatCommands(){/* exported InitChatCommands *//* Default command definition
   * Structure:
   *  <name>: {
   *    func: <function>,
   *    desc: description of the command (used by //help)
   *    alias: array of command aliases (optional)
   *    usage: array of usage objects:
   *      [0]: string, array, or null: parameter name(s)
   *      [1]: description
   *      [2]: formatting options (optional)
   *    extra: array of extra help text (optional)
   *  }
   */var a={log:{func:onCommandLog,desc:"Display or manipulate logged messages",alias:["logs"],usage:[[null,"Display log command usage"],["<number>","Display the message numbered <number>"],["show","Display all logged messages (can be a lot of text!)"],["summary","Display a summary of the logged messages"],["search <string>","Show logs containing <string>"],["remove <index...>","Remove items with the given indexes"],["filter <string>","Remove items that don't contain <string>"],["filter-out <string>","Remove items containing <string>"],["shift","Remove the first logged message"],["pop","Remove the last logged message"],["export","Open a new window with all the logged items"],["size","Display the number of bytes used by the log"],["clear","Clears the entire log (cannot be undone!)"],["replay <index>","Re-inject logged message <index>"],["replay-match <string>","Re-inject logged messages containing <string>"]]},clear:{func:onCommandClear,desc:"Clears all text from either all modules or the specified module",alias:["nuke"],usage:[[null,"Clears all text from all visible modules"],["<module>","Clears all text from <module> (module1, module2)"]]},join:{func:onCommandJoin,desc:"Join a channel",alias:["j"],usage:[["<channel>","Connect to <channel>; leading # is optional"]]},part:{func:onCommandPart,desc:"Leave a channel",alias:["p","leave"],usage:[["<channel>","Disconnect from <channel>; leading # is optional"]]},badges:{func:onCommandBadges,desc:"Display all known badges"},cheers:{func:onCommandCheers,desc:"Display all known cheermotes"},emotes:{func:onCommandEmotes,desc:"Display the requested emotes",usage:[["[<kinds>]",_J("Display emotes; <kinds> can be one or more of: global, channel,"," ffz, bttv, or all")]],extra:[_J("Emotes are organized by set, one set per channel. Set 0 is for","global emotes.")]},plugins:{func:onCommandPlugins,desc:"Display plugin information, if plugins are enabled",alias:["plugin"],usage:[[null,"Show loaded plugins and their status"],["help","Show loaded plugins and command help"],["add <class> <file> [<config>]","Add a plugin by class and file, optionally with a config object"],["load <class> <file> [<config>]","Alias to `//plugin add`"]/* TODO: //plugins addremote */]},client:{func:onCommandClient,desc:"Display client and connection information"},raw:{func:onCommandRaw,desc:"Send a raw message to Twitch (for advanced users only!)",usage:[["<message>","Send <message> to Twitch servers (for advanced users only!)"]]},channels:{func:onCommandChannels,desc:"List connected channels",alias:["channels","ch","joined"]},highlight:{func:onCommandHighlight,desc:"Add, show, or remove highlight patterns",alias:["hl"],usage:[[null,"List highlight patterns"],["show","List highlight patterns"],["add <pattern>","Highlight messages containing <pattern>"],["remove <index>","Remove the pattern numbered <index>"]],extra:[_J("Patterns can be either regexes (such as /foo/) or text (such as","\"foo\")"),_J("Regexes may contain flag characters: /foo/i will match \"foo\",","\"Foo\", \"FOO\", etc."),_J("By default, patterns are case-sensitive; highlighting \"foo\"","will not highlight \"Foo\"")]},auth:{func:onCommandAuth,desc:_J("Display help on authenticating with Twitch Filtered Chat. If","presently authenticated, then also present button to reset","authentication"),alias:["login"],usage:[[null,"Show authentication status and, if needed, authentication help"],["reset","Reset OAuth token; this cannot be undone!"]]}};ChatCommands=new ChatCommandManager;var b=!0,c=!1,d=void 0;try{for(var e,f=Object.entries(a)[Symbol.iterator]();!(b=(e=f.next()).done);b=!0){var g=e.value,h=_slicedToArray(g,2),i=h[0],j=h[1];if(ChatCommands.add(i,j.func,j.desc),j.usage){var k=!0,l=!1,m=void 0;try{for(var n,o,p=j.usage[Symbol.iterator]();!(k=(n=p.next()).done);k=!0)o=n.value,ChatCommands.addUsage(i,o[0],o[1],o[2])}catch(a){l=!0,m=a}finally{try{!k&&p.return&&p.return()}finally{if(l)throw m}}}if(j.alias){var q=!0,r=!1,s=void 0;try{for(var t,u,v=j.alias[Symbol.iterator]();!(q=(t=v.next()).done);q=!0)u=t.value,ChatCommands.addAlias(u,i)}catch(a){r=!0,s=a}finally{try{!q&&v.return&&v.return()}finally{if(r)throw s}}}if(j.extra){var w=!0,x=!1,y=void 0;try{for(var z,A,B=j.extra[Symbol.iterator]();!(w=(z=B.next()).done);w=!0)A=z.value,ChatCommands.addHelp(i,A)}catch(a){x=!0,y=a}finally{try{!w&&B.return&&B.return()}finally{if(x)throw y}}}}}catch(a){c=!0,d=a}finally{try{!b&&f.return&&f.return()}finally{if(c)throw d}}}/* globals LOG_KEY AssetPaths Strings *//* vim: set ts=2 sts=2 sw=2 et: */
